#!/bin/bash
# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
#
# This script is run after the command has completed, and updates the job run status in factory.
#
set -eo pipefail

PIPELINE="$BUILDKITE_PLUGIN_FACTORY_REPORTER_PIPELINE_ID"
JOB_TYPE="$BUILDKITE_PLUGIN_FACTORY_REPORTER_JOB_TYPE"

if [[ $SKIP_BUILDKITE_PLUGINS == "true" ]]; then
    echo "SKIP_BUILDKITE_PLUGINS is set. Skipping factory reporter"
    exit 0
fi
if [[ -z $PIPELINE ]]; then
    echo "No pipeline ID found, skipping factory reporter"
    exit 0
fi
if [[ $BUILDKITE_PULL_REQUEST != "false" ]]; then
    echo "This is a pull request, skipping factory reporter"
    exit 0
fi
if [[ -z $BUILDKITE_BUILD_NUMBER ]]; then
    echo "No BUILDKITE_BUILD_NUMBER environment found, skipping factory reporter"
    exit 0
fi

START_SECONDS=$(buildkite-agent meta-data get start-seconds)
if [[ -z $START_SECONDS ]]; then
  echo "Error: start-seconds not set as meta-data" >&2
  exit 1
fi
echo "Build started at $START_SECONDS"

FACTORY_COMMAND=$(buildkite-agent meta-data get factory-command)
if [[ -z $FACTORY_COMMAND ]]; then
  echo "Error: factory-command not set as meta-data" >&2
  exit 1
fi
echo "Using factory command: $FACTORY_COMMAND"

if [[ -n $BUILDKITE_COMMAND_EXIT_STATUS ]] && (( $BUILDKITE_COMMAND_EXIT_STATUS != 0 )); then
  echo "Build #$BUILDKITE_BUILD_NUMBER failed, setting job run status to failure"
  $FACTORY_COMMAND update-buildkite-job-run $START_SECONDS $PIPELINE "failure"

  # Only update build status if the job type is 'build'
  if [[ $JOB_TYPE == "build" ]]; then
    $FACTORY_COMMAND update-build-status $PIPELINE failure "Build failed"
  fi
else
  echo "Build #$BUILDKITE_BUILD_NUMBER succeeded, setting job run status to success"
  $FACTORY_COMMAND update-buildkite-job-run $START_SECONDS $PIPELINE "success"
fi
